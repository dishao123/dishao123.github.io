<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>帝少博客</title><link>https://blog.xwdev.com</link><description>分享技术，享受生活</description><copyright>帝少博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/58305876?v=4</url><title>avatar</title><link>https://blog.xwdev.com</link></image><lastBuildDate>Sat, 04 Jan 2025 17:09:16 +0000</lastBuildDate><managingEditor>帝少博客</managingEditor><ttl>60</ttl><webMaster>帝少博客</webMaster><item><title>一言 API 接口源码</title><link>https://blog.xwdev.com/post/15.html</link><description>搭建一个自己的一言 API 接口，搭配上[语句采集代码](https://blog.xwdev.com/post/14.html)直接起飞&#13;
&#13;
源码如下&#13;
```php&#13;
&lt;?php&#13;
//获取句子文件的绝对路径&#13;
$path = dirname(__FILE__);&#13;
$file = file($path.'/hitokoto.txt');&#13;
&#13;
//随机读取一行&#13;
$arr  = mt_rand( 0, count( $file ) - 1 );&#13;
$content  = trim($file[$arr]);&#13;
&#13;
//编码判断，用于输出相应的响应头部编码&#13;
if (isset($_GET['charset']) &amp;&amp; !empty($_GET['charset'])) {&#13;
    $charset = $_GET['charset'];&#13;
    if (strcasecmp($charset,'gbk') == 0 ) {&#13;
        $content = mb_convert_encoding($content,'gbk', 'utf-8');&#13;
    }&#13;
} else {&#13;
    $charset = 'utf-8';&#13;
}&#13;
&#13;
//格式化判断，输出js或纯文本&#13;
if ($_GET['encode'] === 'js') {&#13;
    echo 'function api(){document.write('' . $content .'');}';&#13;
}else if($_GET['encode'] === 'json'){&#13;
    $content = array('text'=&gt;$content);&#13;
    echo json_encode($content, JSON_UNESCAPED_UNICODE);&#13;
}else {&#13;
    echo $content;&#13;
}&#13;
?&gt;&#13;
```。</description><guid isPermaLink="true">https://blog.xwdev.com/post/15.html</guid><pubDate>Sat, 04 Jan 2025 17:01:52 +0000</pubDate></item><item><title>一言 (Hitokoto) API 内容采集代码</title><link>https://blog.xwdev.com/post/14.html</link><description>将别人的一言语句采集下来，然后就拥有了一个自己的一言 API 接口了，搭配[一言接口源码](https://blog.xwdev.com/post/15.html)即可食用&#13;
&#13;
采集代码&#13;
```php&#13;
&lt;?php&#13;
$api[] = 'http://域名/api.php';&#13;
$api[] = 'https://域名/api.php';&#13;
$contents = file_get_contents($api[mt_rand(0,count($api)-1)]);&#13;
if(!empty($contents) &amp;&amp; !preg_match('/'.$contents.'/',file_get_contents('./hitokoto.txt'))){&#13;
    file_put_contents('./hitokoto.txt',$contents.'\n',FILE_APPEND);&#13;
    echo 'Success -&gt; '.$contents;&#13;
}else{&#13;
    echo 'Failed -&gt; 获取数据失败';   &#13;
}&#13;
?&gt;&#13;
```&#13;
&#13;
如需新增接口，按照如下格式，添加代码即可&#13;
```php&#13;
$api[] = '要采集的 API 地址';&#13;
```&#13;
&#13;
代码内有重复判断，不用担心有重复内容，随机采集 API 接口，避免触发风控&#13;
&#13;
最后挂个计划任务，慢慢采集就好了。</description><guid isPermaLink="true">https://blog.xwdev.com/post/14.html</guid><pubDate>Sat, 04 Jan 2025 16:51:05 +0000</pubDate></item><item><title>RackNerd 服务器 IPv6 配置教程</title><link>https://blog.xwdev.com/post/13.html</link><description>RackNerd 洛杉矶 (DC 2) 服务器支持免费申请 100 个 IPv6 地址。</description><guid isPermaLink="true">https://blog.xwdev.com/post/13.html</guid><pubDate>Wed, 25 Dec 2024 07:10:32 +0000</pubDate></item><item><title>域名注册，抢注及实用工具</title><link>https://blog.xwdev.com/post/12.html</link><description>记录一下，在网上冲浪的时候看到的域名工具。</description><guid isPermaLink="true">https://blog.xwdev.com/post/12.html</guid><pubDate>Mon, 16 Dec 2024 07:59:40 +0000</pubDate></item><item><title>网页自适应，文字广告，广告位代码</title><link>https://blog.xwdev.com/post/11.html</link><description>适用于任何类型的网站，自适应文字广告，支持多排。</description><guid isPermaLink="true">https://blog.xwdev.com/post/11.html</guid><pubDate>Sun, 15 Dec 2024 18:44:55 +0000</pubDate></item><item><title>网页自适应，广告位代码，可文字，可图片</title><link>https://blog.xwdev.com/post/10.html</link><description>双列自适应广告位代码，支持文字和图片。</description><guid isPermaLink="true">https://blog.xwdev.com/post/10.html</guid><pubDate>Sun, 15 Dec 2024 17:36:04 +0000</pubDate></item><item><title>VS Code 必备插件记录</title><link>https://blog.xwdev.com/post/9.html</link><description>记录一下，正在使用的 VS Code 插件。</description><guid isPermaLink="true">https://blog.xwdev.com/post/9.html</guid><pubDate>Thu, 05 Dec 2024 04:09:27 +0000</pubDate></item><item><title>PHP 发送邮件源码</title><link>https://blog.xwdev.com/post/8.html</link><description>首先，创建一个 `index.html` 文件&#13;
&#13;
```html&#13;
&lt;html&gt;&#13;
&lt;head&gt;&#13;
&lt;title&gt;Simple Send Mail &lt;/title&gt;&#13;
&lt;/head&gt;&#13;
&lt;body&gt;&#13;
&lt;h1&gt;Mail Form&lt;/h1&gt;&#13;
&lt;form name='form1' method='post' action='mail.php'&gt;&#13;
&lt;table&gt;&#13;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;To&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&#13;
&lt;input type='text' name='mailto' size='35'&gt;&#13;
&lt;/td&gt;&lt;/tr&gt;&#13;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Subject&lt;/b&gt;&lt;/td&gt;&#13;
&lt;td&gt;&lt;input type='text' name='mailsubject' size='35'&gt;&lt;/td&gt;&#13;
&lt;/tr&gt;&#13;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Message&lt;/b&gt;&lt;/td&gt;&#13;
&lt;td&gt;&#13;
&lt;textarea name='mailbody' cols='50' rows='7'&gt;&lt;/textarea&gt;&#13;
&lt;/td&gt;&#13;
&lt;/tr&gt;&#13;
&lt;tr&gt;&lt;td colspan='2'&gt;&#13;
&lt;input type='submit' name='Submit' value='Send'&gt;&#13;
&lt;/td&gt;&#13;
&lt;/tr&gt;&#13;
&lt;/table&gt;&#13;
&lt;/form&gt;&#13;
&lt;/body&gt;&#13;
&lt;/html&gt;&#13;
```&#13;
&#13;
然后，新建一个 `mail.php` 文件&#13;
&#13;
```php&#13;
&lt;?php &#13;
$stm='邮件内容'; &#13;
require('smtp.php'); &#13;
########################################## &#13;
$smtpserver = 'smtp.qq.com';//SMTP服务器 &#13;
$smtpserverport = '465';//SMTP服务器端口 &#13;
$smtpusermail = 'XXX@qq.com';//SMTP服务器的用户邮箱 &#13;
$smtpemailto = 'AAA@qq.com';//发送给谁 &#13;
$smtpuser = 'XXX@qq.com';//SMTP服务器的用户帐号 &#13;
$smtppass = '666';//SMTP服务器的用户密码 &#13;
$mailsubject = '666 ';//邮件主题 &#13;
$mailbody = $stm;//邮件内容 &#13;
$mailtype = 'HTML';//邮件格式（HTML/TXT）,TXT为文本邮件 &#13;
########################################## &#13;
$smtp = new smtp($smtpserver,$smtpserverport,true,$smtpuser,$smtppass);//这里面的一个true是表示使用身份验证,否则不使用身份验证. &#13;
$smtp-&gt;debug = TRUE;//是否显示发送的调试信息 &#13;
$smtp-&gt;sendmail($smtpemailto, $smtpusermail, $mailsubject, $mailbody, $mailtype); &#13;
echo '&lt;script&gt;alert('邮件发送成功');parent.document.ADDUser.cheheh.click();&lt;/script&gt;'; &#13;
exit; &#13;
} &#13;
?&gt;&#13;
```&#13;
&#13;
最后，创建一个 `smtp.php` 邮件类&#13;
&#13;
```php&#13;
&lt;?php &#13;
class smtp &#13;
{ &#13;
/* Public Variables */ &#13;
var $smtp_port; &#13;
var $time_out; &#13;
var $host_name; &#13;
var $log_file; &#13;
var $relay_host; &#13;
var $debug; &#13;
var $auth; &#13;
var $user; &#13;
var $pass; &#13;
/* Private Variables */ &#13;
var $sock; &#13;
/* Constractor */ &#13;
function smtp($relay_host = '', $smtp_port = 25,$auth = false,$user,$pass) &#13;
{ &#13;
$this-&gt;debug = FALSE; &#13;
$this-&gt;smtp_port = $smtp_port; &#13;
$this-&gt;relay_host = $relay_host; &#13;
$this-&gt;time_out = 30; //is used in fsockopen() &#13;
$this-&gt;auth = $auth;//auth &#13;
$this-&gt;user = $user; &#13;
$this-&gt;pass = $pass; &#13;
$this-&gt;host_name = 'localhost'; //is used in HELO command &#13;
$this-&gt;log_file = ''; &#13;
$this-&gt;sock = FALSE; &#13;
} &#13;
/* Main Function */ &#13;
function sendmail($to, $from, $subject = '', $body = '', $mailtype, $cc = '', $bcc = '', $additional_headers = '') &#13;
{ &#13;
$mail_from = $this-&gt;get_address($this-&gt;strip_comment($from)); &#13;
$body = ereg_replace('(^|(\r\n))(\.)', '\1.\3', $body); &#13;
$header .= 'MIME-Version:1.0\r\n'; &#13;
if($mailtype=='HTML') &#13;
{ &#13;
$header .= 'Content-Type:text/html\r\n'; &#13;
} &#13;
$header .= 'To: '.$to.'\r\n'; &#13;
if ($cc != '') &#13;
{ &#13;
$header .= 'Cc: '.$cc.'\r\n'; &#13;
} &#13;
$header .= 'From: $from&lt;'.$from.'&gt;\r\n'; &#13;
$header .= 'Subject: '.$subject.'\r\n'; &#13;
$header .= $additional_headers; &#13;
$header .= 'Date: '.date('r').'\r\n'; &#13;
$header .= 'X-Mailer:By Redhat (PHP/'.phpversion().')\r\n'; &#13;
list($msec, $sec) = explode(' ', microtime()); &#13;
$header .= 'Message-ID: &lt;'.date('YmdHis', $sec).'.'.($msec*1000000).'.'.$mail_from.'&gt;\r\n'; &#13;
$TO = explode(',', $this-&gt;strip_comment($to)); &#13;
if ($cc != '') &#13;
{ &#13;
$TO = array_merge($TO, explode(',', $this-&gt;strip_comment($cc))); &#13;
} &#13;
if ($bcc != '') &#13;
{ &#13;
$TO = array_merge($TO, explode(',', $this-&gt;strip_comment($bcc))); &#13;
} &#13;
$sent = TRUE; &#13;
foreach ($TO as $rcpt_to) &#13;
{ &#13;
$rcpt_to = $this-&gt;get_address($rcpt_to); &#13;
if (!$this-&gt;smtp_sockopen($rcpt_to)) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot send email to '.$rcpt_to.'\n'); &#13;
$sent = FALSE; &#13;
continue; &#13;
} &#13;
if ($this-&gt;smtp_send($this-&gt;host_name, $mail_from, $rcpt_to, $header, $body)) &#13;
{ &#13;
$this-&gt;log_write('E-mail has been sent to &lt;'.$rcpt_to.'&gt;\n'); &#13;
} &#13;
else &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot send email to &lt;'.$rcpt_to.'&gt;\n'); &#13;
$sent = FALSE; &#13;
} &#13;
fclose($this-&gt;sock); &#13;
$this-&gt;log_write('Disconnected from remote host\n'); &#13;
} &#13;
return $sent; &#13;
} &#13;
/* Private Functions */ &#13;
function smtp_send($helo, $from, $to, $header, $body = '') &#13;
{ &#13;
if (!$this-&gt;smtp_putcmd('HELO', $helo)) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
#auth &#13;
if($this-&gt;auth) &#13;
{ &#13;
if (!$this-&gt;smtp_putcmd('AUTH LOGIN', base64_encode($this-&gt;user))) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('', base64_encode($this-&gt;pass))) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('MAIL', 'FROM:&lt;'.$from.'&gt;')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending MAIL FROM command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('RCPT', 'TO:&lt;'.$to.'&gt;')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending RCPT TO command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('DATA')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending DATA command'); &#13;
} &#13;
if (!$this-&gt;smtp_message($header, $body)) &#13;
{ &#13;
return $this-&gt;smtp_error('sending message'); &#13;
} &#13;
if (!$this-&gt;smtp_eom()) &#13;
{ &#13;
return $this-&gt;smtp_error('sending &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt; [EOM]'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('QUIT')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending QUIT command'); &#13;
} &#13;
return TRUE; &#13;
} &#13;
function smtp_sockopen($address) &#13;
{ &#13;
if ($this-&gt;relay_host == '') &#13;
{ &#13;
return $this-&gt;smtp_sockopen_mx($address); &#13;
} &#13;
else &#13;
{ &#13;
return $this-&gt;smtp_sockopen_relay(); &#13;
} &#13;
} &#13;
function smtp_sockopen_relay() &#13;
{ &#13;
$this-&gt;log_write('Trying to '.$this-&gt;relay_host.':'.$this-&gt;smtp_port.'\n'); &#13;
$this-&gt;sock = @fsockopen($this-&gt;relay_host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); &#13;
if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot connenct to relay host '.$this-&gt;relay_host.'\n'); &#13;
$this-&gt;log_write('Error: '.$errstr.' ('.$errno.')\n'); &#13;
return FALSE; &#13;
} &#13;
$this-&gt;log_write('Connected to relay host '.$this-&gt;relay_host.'\n'); &#13;
return TRUE;; &#13;
} &#13;
function smtp_sockopen_mx($address) &#13;
{ &#13;
$domain = ereg_replace('^.+@([^@]+)$', '\1', $address); &#13;
if (!@getmxrr($domain, $MXHOSTS)) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot resolve MX \''.$domain.'\'\n'); &#13;
return FALSE; &#13;
} &#13;
foreach ($MXHOSTS as $host) &#13;
{ &#13;
$this-&gt;log_write('Trying to '.$host.':'.$this-&gt;smtp_port.'\n'); &#13;
$this-&gt;sock = @fsockopen($host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); &#13;
if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) &#13;
{ &#13;
$this-&gt;log_write('Warning: Cannot connect to mx host '.$host.'\n'); &#13;
$this-&gt;log_write('Error: '.$errstr.' ('.$errno.')\n'); &#13;
continue; &#13;
} &#13;
$this-&gt;log_write('Connected to mx host '.$host.'\n'); &#13;
return TRUE; &#13;
} &#13;
$this-&gt;log_write('Error: Cannot connect to any mx hosts ('.implode(', ', $MXHOSTS).')\n'); &#13;
return FALSE; &#13;
} &#13;
function smtp_message($header, $body) &#13;
{ &#13;
fputs($this-&gt;sock, $header.'\r\n'.$body); &#13;
$this-&gt;smtp_debug('&gt; '.str_replace('\r\n', '\n'.'&gt; ', $header.'\n&gt; '.$body.'\n&gt; ')); &#13;
return TRUE; &#13;
} &#13;
function smtp_eom() &#13;
{ &#13;
fputs($this-&gt;sock, '\r\n.\r\n'); &#13;
$this-&gt;smtp_debug('. [EOM]\n'); &#13;
return $this-&gt;smtp_ok(); &#13;
} &#13;
function smtp_ok() &#13;
{ &#13;
$response = str_replace('\r\n', '', fgets($this-&gt;sock, 512)); &#13;
$this-&gt;smtp_debug($response.'\n'); &#13;
if (!ereg('^[23]', $response)) &#13;
{ &#13;
fputs($this-&gt;sock, 'QUIT\r\n'); &#13;
fgets($this-&gt;sock, 512); &#13;
$this-&gt;log_write('Error: Remote host returned \''.$response.'\'\n'); &#13;
return FALSE; &#13;
} &#13;
return TRUE; &#13;
} &#13;
function smtp_putcmd($cmd, $arg = '') &#13;
{ &#13;
if ($arg != '') &#13;
{ &#13;
if($cmd=='') &#13;
{ &#13;
$cmd = $arg; &#13;
} &#13;
else &#13;
{ &#13;
$cmd = $cmd.' '.$arg; &#13;
} &#13;
} &#13;
fputs($this-&gt;sock, $cmd.'\r\n'); &#13;
$this-&gt;smtp_debug('&gt; '.$cmd.'\n'); &#13;
return $this-&gt;smtp_ok(); &#13;
} &#13;
function smtp_error($string) &#13;
{ &#13;
$this-&gt;log_write('Error: Error occurred while '.$string.'.\n'); &#13;
return FALSE; &#13;
} &#13;
function log_write($message) &#13;
{ &#13;
$this-&gt;smtp_debug($message); &#13;
if ($this-&gt;log_file == '') &#13;
{ &#13;
return TRUE; &#13;
} &#13;
$message = date('M d H:i:s ').get_current_user().'['.getmypid().']: '.$message; &#13;
if (!@file_exists($this-&gt;log_file) || !($fp = @fopen($this-&gt;log_file, 'a'))) &#13;
{ &#13;
$this-&gt;smtp_debug('Warning: Cannot open log file \''.$this-&gt;log_file.'\'\n'); &#13;
return FALSE;; &#13;
} &#13;
flock($fp, LOCK_EX); &#13;
fputs($fp, $message); &#13;
fclose($fp); &#13;
return TRUE; &#13;
} &#13;
function strip_comment($address) &#13;
{ &#13;
$comment = '\([^()]*\)'; &#13;
while (ereg($comment, $address)) &#13;
{ &#13;
$address = ereg_replace($comment, '', $address); &#13;
} &#13;
return $address; &#13;
} &#13;
function get_address($address) &#13;
{ &#13;
$address = ereg_replace('([ \t\r\n])+', '', $address); &#13;
$address = ereg_replace('^.*&lt;(.+)&gt;.*$', '\1', $address); &#13;
return $address; &#13;
} &#13;
function smtp_debug($message) &#13;
{ &#13;
if ($this-&gt;debug) &#13;
{ &#13;
//echo $message; &#13;
} &#13;
} &#13;
} &#13;
?&gt;&lt;?php &#13;
class smtp &#13;
{ &#13;
/* Public Variables */ &#13;
var $smtp_port; &#13;
var $time_out; &#13;
var $host_name; &#13;
var $log_file; &#13;
var $relay_host; &#13;
var $debug; &#13;
var $auth; &#13;
var $user; &#13;
var $pass; &#13;
/* Private Variables */ &#13;
var $sock; &#13;
/* Constractor */ &#13;
function smtp($relay_host = '', $smtp_port = 25,$auth = false,$user,$pass) &#13;
{ &#13;
$this-&gt;debug = FALSE; &#13;
$this-&gt;smtp_port = $smtp_port; &#13;
$this-&gt;relay_host = $relay_host; &#13;
$this-&gt;time_out = 30; //is used in fsockopen() &#13;
$this-&gt;auth = $auth;//auth &#13;
$this-&gt;user = $user; &#13;
$this-&gt;pass = $pass; &#13;
$this-&gt;host_name = 'localhost'; //is used in HELO command &#13;
$this-&gt;log_file = ''; &#13;
$this-&gt;sock = FALSE; &#13;
} &#13;
/* Main Function */ &#13;
function sendmail($to, $from, $subject = '', $body = '', $mailtype, $cc = '', $bcc = '', $additional_headers = '') &#13;
{ &#13;
$mail_from = $this-&gt;get_address($this-&gt;strip_comment($from)); &#13;
$body = ereg_replace('(^|(\r\n))(\.)', '\1.\3', $body); &#13;
$header .= 'MIME-Version:1.0\r\n'; &#13;
if($mailtype=='HTML') &#13;
{ &#13;
$header .= 'Content-Type:text/html\r\n'; &#13;
} &#13;
$header .= 'To: '.$to.'\r\n'; &#13;
if ($cc != '') &#13;
{ &#13;
$header .= 'Cc: '.$cc.'\r\n'; &#13;
} &#13;
$header .= 'From: $from&lt;'.$from.'&gt;\r\n'; &#13;
$header .= 'Subject: '.$subject.'\r\n'; &#13;
$header .= $additional_headers; &#13;
$header .= 'Date: '.date('r').'\r\n'; &#13;
$header .= 'X-Mailer:By Redhat (PHP/'.phpversion().')\r\n'; &#13;
list($msec, $sec) = explode(' ', microtime()); &#13;
$header .= 'Message-ID: &lt;'.date('YmdHis', $sec).'.'.($msec*1000000).'.'.$mail_from.'&gt;\r\n'; &#13;
$TO = explode(',', $this-&gt;strip_comment($to)); &#13;
if ($cc != '') &#13;
{ &#13;
$TO = array_merge($TO, explode(',', $this-&gt;strip_comment($cc))); &#13;
} &#13;
if ($bcc != '') &#13;
{ &#13;
$TO = array_merge($TO, explode(',', $this-&gt;strip_comment($bcc))); &#13;
} &#13;
$sent = TRUE; &#13;
foreach ($TO as $rcpt_to) &#13;
{ &#13;
$rcpt_to = $this-&gt;get_address($rcpt_to); &#13;
if (!$this-&gt;smtp_sockopen($rcpt_to)) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot send email to '.$rcpt_to.'\n'); &#13;
$sent = FALSE; &#13;
continue; &#13;
} &#13;
if ($this-&gt;smtp_send($this-&gt;host_name, $mail_from, $rcpt_to, $header, $body)) &#13;
{ &#13;
$this-&gt;log_write('E-mail has been sent to &lt;'.$rcpt_to.'&gt;\n'); &#13;
} &#13;
else &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot send email to &lt;'.$rcpt_to.'&gt;\n'); &#13;
$sent = FALSE; &#13;
} &#13;
fclose($this-&gt;sock); &#13;
$this-&gt;log_write('Disconnected from remote host\n'); &#13;
} &#13;
return $sent; &#13;
} &#13;
/* Private Functions */ &#13;
function smtp_send($helo, $from, $to, $header, $body = '') &#13;
{ &#13;
if (!$this-&gt;smtp_putcmd('HELO', $helo)) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
#auth &#13;
if($this-&gt;auth) &#13;
{ &#13;
if (!$this-&gt;smtp_putcmd('AUTH LOGIN', base64_encode($this-&gt;user))) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('', base64_encode($this-&gt;pass))) &#13;
{ &#13;
return $this-&gt;smtp_error('sending HELO command'); &#13;
} &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('MAIL', 'FROM:&lt;'.$from.'&gt;')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending MAIL FROM command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('RCPT', 'TO:&lt;'.$to.'&gt;')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending RCPT TO command'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('DATA')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending DATA command'); &#13;
} &#13;
if (!$this-&gt;smtp_message($header, $body)) &#13;
{ &#13;
return $this-&gt;smtp_error('sending message'); &#13;
} &#13;
if (!$this-&gt;smtp_eom()) &#13;
{ &#13;
return $this-&gt;smtp_error('sending &lt;CR&gt;&lt;LF&gt;.&lt;CR&gt;&lt;LF&gt; [EOM]'); &#13;
} &#13;
if (!$this-&gt;smtp_putcmd('QUIT')) &#13;
{ &#13;
return $this-&gt;smtp_error('sending QUIT command'); &#13;
} &#13;
return TRUE; &#13;
} &#13;
function smtp_sockopen($address) &#13;
{ &#13;
if ($this-&gt;relay_host == '') &#13;
{ &#13;
return $this-&gt;smtp_sockopen_mx($address); &#13;
} &#13;
else &#13;
{ &#13;
return $this-&gt;smtp_sockopen_relay(); &#13;
} &#13;
} &#13;
function smtp_sockopen_relay() &#13;
{ &#13;
$this-&gt;log_write('Trying to '.$this-&gt;relay_host.':'.$this-&gt;smtp_port.'\n'); &#13;
$this-&gt;sock = @fsockopen($this-&gt;relay_host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); &#13;
if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot connenct to relay host '.$this-&gt;relay_host.'\n'); &#13;
$this-&gt;log_write('Error: '.$errstr.' ('.$errno.')\n'); &#13;
return FALSE; &#13;
} &#13;
$this-&gt;log_write('Connected to relay host '.$this-&gt;relay_host.'\n'); &#13;
return TRUE;; &#13;
} &#13;
function smtp_sockopen_mx($address) &#13;
{ &#13;
$domain = ereg_replace('^.+@([^@]+)$', '\1', $address); &#13;
if (!@getmxrr($domain, $MXHOSTS)) &#13;
{ &#13;
$this-&gt;log_write('Error: Cannot resolve MX \''.$domain.'\'\n'); &#13;
return FALSE; &#13;
} &#13;
foreach ($MXHOSTS as $host) &#13;
{ &#13;
$this-&gt;log_write('Trying to '.$host.':'.$this-&gt;smtp_port.'\n'); &#13;
$this-&gt;sock = @fsockopen($host, $this-&gt;smtp_port, $errno, $errstr, $this-&gt;time_out); &#13;
if (!($this-&gt;sock &amp;&amp; $this-&gt;smtp_ok())) &#13;
{ &#13;
$this-&gt;log_write('Warning: Cannot connect to mx host '.$host.'\n'); &#13;
$this-&gt;log_write('Error: '.$errstr.' ('.$errno.')\n'); &#13;
continue; &#13;
} &#13;
$this-&gt;log_write('Connected to mx host '.$host.'\n'); &#13;
return TRUE; &#13;
} &#13;
$this-&gt;log_write('Error: Cannot connect to any mx hosts ('.implode(', ', $MXHOSTS).')\n'); &#13;
return FALSE; &#13;
} &#13;
function smtp_message($header, $body) &#13;
{ &#13;
fputs($this-&gt;sock, $header.'\r\n'.$body); &#13;
$this-&gt;smtp_debug('&gt; '.str_replace('\r\n', '\n'.'&gt; ', $header.'\n&gt; '.$body.'\n&gt; ')); &#13;
return TRUE; &#13;
} &#13;
function smtp_eom() &#13;
{ &#13;
fputs($this-&gt;sock, '\r\n.\r\n'); &#13;
$this-&gt;smtp_debug('. [EOM]\n'); &#13;
return $this-&gt;smtp_ok(); &#13;
} &#13;
function smtp_ok() &#13;
{ &#13;
$response = str_replace('\r\n', '', fgets($this-&gt;sock, 512)); &#13;
$this-&gt;smtp_debug($response.'\n'); &#13;
if (!ereg('^[23]', $response)) &#13;
{ &#13;
fputs($this-&gt;sock, 'QUIT\r\n'); &#13;
fgets($this-&gt;sock, 512); &#13;
$this-&gt;log_write('Error: Remote host returned \''.$response.'\'\n'); &#13;
return FALSE; &#13;
} &#13;
return TRUE; &#13;
} &#13;
function smtp_putcmd($cmd, $arg = '') &#13;
{ &#13;
if ($arg != '') &#13;
{ &#13;
if($cmd=='') &#13;
{ &#13;
$cmd = $arg; &#13;
} &#13;
else &#13;
{ &#13;
$cmd = $cmd.' '.$arg; &#13;
} &#13;
} &#13;
fputs($this-&gt;sock, $cmd.'\r\n'); &#13;
$this-&gt;smtp_debug('&gt; '.$cmd.'\n'); &#13;
return $this-&gt;smtp_ok(); &#13;
} &#13;
function smtp_error($string) &#13;
{ &#13;
$this-&gt;log_write('Error: Error occurred while '.$string.'.\n'); &#13;
return FALSE; &#13;
} &#13;
function log_write($message) &#13;
{ &#13;
$this-&gt;smtp_debug($message); &#13;
if ($this-&gt;log_file == '') &#13;
{ &#13;
return TRUE; &#13;
} &#13;
$message = date('M d H:i:s ').get_current_user().'['.getmypid().']: '.$message; &#13;
if (!@file_exists($this-&gt;log_file) || !($fp = @fopen($this-&gt;log_file, 'a'))) &#13;
{ &#13;
$this-&gt;smtp_debug('Warning: Cannot open log file \''.$this-&gt;log_file.'\'\n'); &#13;
return FALSE;; &#13;
} &#13;
flock($fp, LOCK_EX); &#13;
fputs($fp, $message); &#13;
fclose($fp); &#13;
return TRUE; &#13;
} &#13;
function strip_comment($address) &#13;
{ &#13;
$comment = '\([^()]*\)'; &#13;
while (ereg($comment, $address)) &#13;
{ &#13;
$address = ereg_replace($comment, '', $address); &#13;
} &#13;
return $address; &#13;
} &#13;
function get_address($address) &#13;
{ &#13;
$address = ereg_replace('([ \t\r\n])+', '', $address); &#13;
$address = ereg_replace('^.*&lt;(.+)&gt;.*$', '\1', $address); &#13;
return $address; &#13;
} &#13;
function smtp_debug($message) &#13;
{ &#13;
if ($this-&gt;debug) &#13;
{ &#13;
//echo $message; &#13;
} &#13;
} &#13;
} &#13;
?&gt;&#13;
```&#13;
完成&#13;
&#13;
&gt; 代码来源于网络，仅记录，未测试。</description><guid isPermaLink="true">https://blog.xwdev.com/post/8.html</guid><pubDate>Tue, 05 Nov 2024 17:26:28 +0000</pubDate></item><item><title>文本对比工具浏览器书签版</title><link>https://blog.xwdev.com/post/7.html</link><description>一个可以在浏览器上使用的文本差异编辑器，还可以保存在浏览器书签，临时用用还不错&#13;
&#13;
&#13;
使用方法&#13;
&#13;
1，随便打开一个网页&#13;
2，然后把网页保存成书签&#13;
3，把保存的书签网页地址，替换为以下内容即可&#13;
&#13;
```html&#13;
data:text/html,&lt;!DOCTYPE html&gt;&lt;html lang='zh'&gt;&lt;head&gt;&lt;script&gt;const editorConfig={language:'plaintext',originalEditable:true,fontSize:20,wordWrap:'on',automaticLayout:true,fontFamily:'\'JetBrains Mono\',\'HarmonyOS Sans SC\',\'Cascadia Code\',\'Consolas\',\'Menlo\',\'Twemoji Mozilla\',\'monospace\''};&lt;/script&gt;&lt;meta charset='UTF-8' /&gt;&lt;meta name='viewport' content='width=device-width, initial-scale=1.0' /&gt;&lt;title&gt;临时差异编辑器&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id='editor-main' style='width:100vw;height:100vh;position:fixed;inset:0;overflow:hidden;'&gt;&lt;/div&gt;&lt;script src='https://fastly.jsdelivr.net/npm/monaco-editor@latest/min/vs/loader.js'&gt;&lt;/script&gt;&lt;script&gt;require.config({paths:{'vs':'https://fastly.jsdelivr.net/npm/monaco-editor@latest/min/vs'}});require(['vs/editor/editor.main'],function(){const editor=monaco.editor.createDiffEditor(document.getElementById('editor-main'),editorConfig);editor.setModel({original:monaco.editor.createModel('','text/plain'),modified:monaco.editor.createModel('','text/plain')});});&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&#13;
```&#13;
&#13;
小技巧：把上方代码开头中的`language`后面的`plaintext`，修改为你所使用的代码语言，例如`html`，即可高亮提示，如果你懂代码，还可以自定义外观，字体等，想怎么改怎么改。</description><guid isPermaLink="true">https://blog.xwdev.com/post/7.html</guid><pubDate>Tue, 29 Oct 2024 10:28:14 +0000</pubDate></item><item><title>终于用上 Follow RSS 阅读器了</title><link>https://blog.xwdev.com/post/6.html</link><description>在此感谢 NodeSeek 论坛的[@enoch](https://www.nodeseek.com/space/9967#/general)大佬，提供的邀请码&#13;
&#13;
&#13;
This message is used to verify that this feed (feedId:71548139451401216) belongs to me (userId:57778326200220672). Join me in enjoying the next generation information browser https://follow.is.。</description><guid isPermaLink="true">https://blog.xwdev.com/post/6.html</guid><pubDate>Tue, 22 Oct 2024 14:08:55 +0000</pubDate></item><item><title>Cloudflare CDN 支持的端口</title><link>https://blog.xwdev.com/post/5.html</link><description>记录一下 CF 支持的反代/回源端口列表，开小黄云必备&#13;
&#13;
## HTTP&#13;
&#13;
- 80&#13;
- 8080&#13;
- 8880&#13;
- 2052&#13;
- 2082&#13;
- 2086&#13;
- 2095&#13;
&#13;
## HTTPS&#13;
&#13;
- 443&#13;
- 2053&#13;
- 2083&#13;
- 2087&#13;
- 2096&#13;
- 8443。</description><guid isPermaLink="true">https://blog.xwdev.com/post/5.html</guid><pubDate>Fri, 09 Aug 2024 15:22:44 +0000</pubDate></item><item><title>VPS 服务器常用脚本及工具</title><link>https://blog.xwdev.com/post/4.html</link><description>## 本文记录了一些 VPS 服务器常用的脚本和工具。</description><guid isPermaLink="true">https://blog.xwdev.com/post/4.html</guid><pubDate>Mon, 05 Aug 2024 14:56:30 +0000</pubDate></item><item><title>Markdown 常用语法</title><link>https://blog.xwdev.com/post/3.html</link><description>![](https://img.shields.io/badge/Markdown-0096FF) ![](https://img.shields.io/badge/Static_Badge-630DF9)&#13;
这是一个 Markdown 语法测试页面，同时记录个人常用语法。</description><guid isPermaLink="true">https://blog.xwdev.com/post/3.html</guid><pubDate>Sun, 31 Mar 2024 14:37:13 +0000</pubDate></item><item><title>关于</title><link>https://blog.xwdev.com/about.html</link><description>你好。</description><guid isPermaLink="true">https://blog.xwdev.com/about.html</guid><pubDate>Sat, 30 Mar 2024 09:46:52 +0000</pubDate></item><item><title>友情链接</title><link>https://blog.xwdev.com/link.html</link><description>暂无友链。</description><guid isPermaLink="true">https://blog.xwdev.com/link.html</guid><pubDate>Sat, 30 Mar 2024 09:49:02 +0000</pubDate></item></channel></rss>